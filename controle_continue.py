import streamlit as st

# Mapping of niveaux de ma√Ætrise to points


def niveau_vers_points(niveau):
    niveau = niveau.strip().lower()
    correspondance = {
        "tr√®s bonne ma√Ætrise": 50,
        "vert fonc√©": 50,
        "ma√Ætrise satisfaisante": 40,
        "vert clair": 40,
        "ma√Ætrise fragile": 25,
        "jaune": 25,
        "ma√Ætrise insuffisante": 10,
        "orange": 10,
    }
    return correspondance.get(niveau, 0)


# Liste des comp√©tences
competences = [
    "Comprendre, s‚Äôexprimer en utilisant la langue fran√ßaise",
    "Comprendre, s‚Äôexprimer en utilisant une langue √©trang√®re",
    "Comprendre, s‚Äôexprimer en utilisant les langages math√©matiques et scientifiques",
    "Comprendre, s‚Äôexprimer en utilisant les langages des arts et du corps",
    "M√©thodes et outils pour apprendre",
    "Formation de la personne et du citoyen",
    "Syst√®mes naturels et syst√®mes techniques",
    "Repr√©sentations du monde et l‚Äôactivit√© humaine"
]

st.title("üéì Calculateur du Contr√¥le Continu du Brevet")

st.markdown(
    "**Choisissez le niveau de ma√Ætrise pour chaque comp√©tence (Semestre 1 et 2)**")

total_points = 0
max_points = len(competences) * 100

for comp in competences:
    col1, col2 = st.columns(2)

    with col1:
        sem1 = st.selectbox(
            f"{comp} (Semestre 1)",
            ["Tr√®s bonne ma√Ætrise", "Ma√Ætrise satisfaisante",
                "Ma√Ætrise fragile", "Ma√Ætrise insuffisante"],
            key=comp + "_s1"
        )
    with col2:
        sem2 = st.selectbox(
            f"{comp} (Semestre 2)",
            ["Tr√®s bonne ma√Ætrise", "Ma√Ætrise satisfaisante",
                "Ma√Ætrise fragile", "Ma√Ætrise insuffisante"],
            key=comp + "_s2"
        )

    avg_score = (niveau_vers_points(sem1) + niveau_vers_points(sem2)) / 2
    total_points += avg_score

# R√©sultat final
st.markdown("---")
st.subheader("üßÆ R√©sultat final")

score_sur_400 = round(total_points)
note_sur_20 = round((score_sur_400 / 400) * 20, 2)

st.write(f"**Total des points:** {score_sur_400} / 400")
st.write(f"**Note sur 20:** {note_sur_20} / 20")
